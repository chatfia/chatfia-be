# github repository actions 페이지에 나타날 이름
name: chatfia CI/CD using github actions & docker

# event trigger
# main | develop 브랜치에 push 되었을 때 실행
on:
  push:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      # JDK Setting
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # yml 파일 Setting - application.yml
      - name: make application.yml
        if: |
          contains(github.ref, 'main') ||
          contains(github.ref, 'develop')
        run: |
          cd ./src/main/resources
            touch ./application.yml
            echo "${{ secrets.YML }}" > ./application.yml
          shell: bash

      # gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test

      # docker build & push
      - name: Docker build & push to dev
        if: |
          contains(github.ref, 'main') ||
          contains(github.ref, 'develop')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chatfia .
          docker push ${{ secrets.DOCKER_USERNAME }}/chatfia

      # pull to develop
      - name: Pull to develop
        uses: appleboy/ssh-action@master
        id: pull-dev
        if: |
          contains(github.ref, 'main') ||
          contains(github.ref, 'develop')
        with:
          host: ${{ secrets.HOST_DEV }} # EC2 퍼블릭 IPv4 DNS
          username: ${{ secrets.USERNAME }} # ubuntu
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker ps
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/chatfia

  docker-pull-and-run:
    runs-on: [self-hosted, develop]
    if: ${{ needs.CI-CD.result == 'success' }}
    needs: [ CI-CD ]
    steps:
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

#      - name: Install AWS CLI
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y awscli

      - name: 배포 스크립트 실행
        run: |
          sh /deploy.sh
          sudo docker image prune -f